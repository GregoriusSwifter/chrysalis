global Entry           ; making entry point visible to linker
extern kmain            ; kmain is defined elsewhere

; setting up the Multiboot header - see GRUB docs for details
MODULEALIGN equ  1<<0 ; align loaded modules on 4KB page boundaries
MEMINFO     equ  1<<1 ; provide memory map
VMT_INFO    equ  1<<2 ; provide video mode table info

FLAGS       equ MODULEALIGN | MEMINFO   ; this is the Multiboot 'flag' field
MAGIC       equ 0x1BADB002              ; 'magic number' lets bootloader find the header
CHECKSUM    equ -(MAGIC + FLAGS)        ; checksum required

section .text align = 4
MultiBootHeader:
   dd MAGIC
   dd FLAGS
   dd CHECKSUM

; reserve initial kernel stack space -- that's 16k.
STACKSIZE equ 0x4000

Entry:
    mov esp, Stack+STACKSIZE   ; set up the stack

    push ebx                   ; pass Multiboot info structure
    push eax                   ; pass Multiboot magic number

    call kmain                 ; call kernel proper
    jmp Hang

Hang:
   hlt                         ; halt machine should kernel return
   jmp Hang

section .bss align = 32
Stack:
   resb STACKSIZE              ; reserve 16k stack on a quadword boundary
